{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\cs366final\\\\src\\\\pages\\\\LineChart.js\";\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data\n}) {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      tooltip: {\n        enabled: true\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: function (value) {\n            return value + \"%\";\n          }\n        }\n      }\n    }\n  };\n  const chartData = {\n    labels: data.map((_, index) => `Label ${index + 1}`),\n    datasets: [{\n      label: 'User Demographic %',\n      data: data,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["Line","jsxDEV","_jsxDEV","LineChart","data","options","responsive","plugins","legend","display","position","tooltip","enabled","scales","y","beginAtZero","ticks","callback","value","chartData","labels","map","_","index","datasets","label","borderColor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Documents/cs366final/src/pages/LineChart.js"],"sourcesContent":["import { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction LineChart({ data }) {\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: true,\r\n                position: 'top',\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                ticks: {\r\n                    callback: function(value) {\r\n                        return value + \"%\"; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const chartData = {\r\n        labels: data.map((_, index) => `Label ${index + 1}`),\r\n        datasets: [\r\n            {\r\n                label: 'User Demographic %',\r\n                data: data,\r\n                borderColor: 'rgb(75, 192, 192)',\r\n                backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n            }\r\n        ]\r\n    };\r\n\r\n    return <Line options={options} data={chartData} />;\r\n}\r\n\r\nexport default LineChart;"],"mappings":";AAAA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACzB,MAAMC,OAAO,GAAG;IACZC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE;MACd,CAAC;MACDC,OAAO,EAAE;QACLC,OAAO,EAAE;MACb;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACHC,QAAQ,EAAE,SAAAA,CAASC,KAAK,EAAE;YACtB,OAAOA,KAAK,GAAG,GAAG;UACtB;QACJ;MACJ;IACJ;EACJ,CAAC;EAED,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAEhB,IAAI,CAACiB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAM,SAAQA,KAAK,GAAG,CAAE,EAAC,CAAC;IACpDC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,oBAAoB;MAC3BrB,IAAI,EAAEA,IAAI;MACVsB,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACrB,CAAC;EAET,CAAC;EAED,oBAAOzB,OAAA,CAACF,IAAI;IAACK,OAAO,EAAEA,OAAQ;IAACD,IAAI,EAAEe;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtD;AAACC,EAAA,GArCQ7B,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}